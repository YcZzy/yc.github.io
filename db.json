{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/Butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/avatar.jpeg","path":"img/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/bg.jpeg","path":"img/bg.jpeg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Markdown语法.md","hash":"358423bc5baf3d3ba576d8a4ee64754b73555d35","modified":1618199682661},{"_id":"source/_posts/webpack打包后的代码是怎么样的.md","hash":"4cc15ad32674a1e88f7a2c9da305c77b3a9f7854","modified":1615190869370},{"_id":"source/_posts/机器学习.md","hash":"4fd165967decd937221d410065b4c296ae980fad","modified":1618391367860},{"_id":"source/_posts/算法题1.md","hash":"8c1b125d7f75d5868b1a70e4b291df48f57fc8e7","modified":1619006777859},{"_id":"source/_posts/算法题2.md","hash":"97d09da1a9032570fe0c4d517af792a8ce39b3ee","modified":1619008899643},{"_id":"source/_posts/算法题3.md","hash":"3f4bbe22e70a46e3f6b404a374ccaaeeff143bc3","modified":1619096161102},{"_id":"source/categories/index.md","hash":"26d6478f94313a02aa85d9d8bf6e585d06677033","modified":1618207962232},{"_id":"source/tags/index.md","hash":"e3216010f28af170bb11bbde7f6610116dd4f35c","modified":1618207939049},{"_id":"themes/Butterfly/_config.yml","hash":"bad7618f9de724b315fd1e52bf8d48e803e1715d","modified":1618372049712},{"_id":"themes/Butterfly/package.json","hash":"e1bbac0d82813ead6a4666e2c7b4a877bf429f5b","modified":1614241387169},{"_id":"themes/Butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1614241387150},{"_id":"themes/Butterfly/README.md","hash":"6fb49415adfefe85efc530cfb0a74dadb0bd1159","modified":1614241387151},{"_id":"themes/Butterfly/languages/default.yml","hash":"7ca673fb629ea74f5ba5e75b4f0f95248cfb5090","modified":1614241387151},{"_id":"themes/Butterfly/languages/en.yml","hash":"cd333235ff1648a6bf58dfafc81f2c57672a15a5","modified":1614241387151},{"_id":"themes/Butterfly/languages/zh-CN.yml","hash":"741e522b2387f94764a73844e7b084cc7e927c54","modified":1614241387152},{"_id":"themes/Butterfly/languages/zh-TW.yml","hash":"79a50c40d9f5463f1fa42aa870ac6b8b84540412","modified":1614241387152},{"_id":"themes/Butterfly/layout/404.pug","hash":"58cfa5985e58e10c97a9f8a9dc354f1c766154b3","modified":1614241387152},{"_id":"themes/Butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1614241387152},{"_id":"themes/Butterfly/layout/category.pug","hash":"60c1b795b6e227b5dd81963b51d29d1b81d0bf49","modified":1614241387152},{"_id":"themes/Butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1614241387168},{"_id":"themes/Butterfly/layout/page.pug","hash":"58d0f81279a52fe060560a2ede825beafc44fe93","modified":1614241387169},{"_id":"themes/Butterfly/layout/post.pug","hash":"8d398c8925182699d9f2b9f1b727f06228488312","modified":1614241387169},{"_id":"themes/Butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1614241387169},{"_id":"themes/Butterfly/README_CN.md","hash":"605ae2826b86f304cffc14db8898d1af0790dedc","modified":1614241387151},{"_id":"themes/Butterfly/.github/stale.yml","hash":"05a55a87fa7f122c59683e41c8b2e37e79f688f0","modified":1614241387150},{"_id":"themes/Butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"476802922b774b679225102ac30a9d9183394701","modified":1614241387150},{"_id":"themes/Butterfly/layout/includes/additional-js.pug","hash":"4156224c47bfc2482281ac4e4df701c30476ff00","modified":1614241387152},{"_id":"themes/Butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1614241387152},{"_id":"themes/Butterfly/layout/includes/head.pug","hash":"aa105ea4eaecc951f7474b549b6ac0095a5fab1f","modified":1614241387153},{"_id":"themes/Butterfly/layout/includes/layout.pug","hash":"76d672c91f6bb6f20c6936e05067c42f7917ac61","modified":1614241387155},{"_id":"themes/Butterfly/layout/includes/pagination.pug","hash":"a3298d12181d739dedd2ea20b65594797e42e6d7","modified":1614241387156},{"_id":"themes/Butterfly/layout/includes/rightside.pug","hash":"2d0453adf92a3fd3466cf0793f14685d17b8b51d","modified":1614241387157},{"_id":"themes/Butterfly/layout/includes/sidebar.pug","hash":"f81b25dfabfa50e76acd100b97774936179ad85f","modified":1614241387157},{"_id":"themes/Butterfly/scripts/events/404.js","hash":"3c30dbd8b910ce7d8d7d8353cf2266cbc5d8775d","modified":1614241387169},{"_id":"themes/Butterfly/scripts/events/init.js","hash":"43b245c308797c2d62cb70429a85f1a05d3395ab","modified":1614241387169},{"_id":"themes/Butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":1614241387170},{"_id":"themes/Butterfly/scripts/filters/post_lazyload.js","hash":"e9cf275c362d8634f093e63068da7ed1e53c7600","modified":1614241387170},{"_id":"themes/Butterfly/scripts/filters/random_cover.js","hash":"0f5017be123ae2b2ddf231d9d71a5c4cd1f2f206","modified":1614241387170},{"_id":"themes/Butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1614241387170},{"_id":"themes/Butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1614241387171},{"_id":"themes/Butterfly/scripts/helpers/inject_head_js.js","hash":"81459adf885a15c6e9784bc2275c07efe67ab0b4","modified":1614241387171},{"_id":"themes/Butterfly/scripts/helpers/page.js","hash":"1da73cd47b78c6dbc3f04ce500d6cc5711c94412","modified":1614241387171},{"_id":"themes/Butterfly/scripts/helpers/related_post.js","hash":"0d8ba6120dce617a2a1fbc9167572db2ee9f22ef","modified":1614241387171},{"_id":"themes/Butterfly/scripts/tag/button.js","hash":"e75283267f3a4773e6d803593d557e218396f260","modified":1614241387171},{"_id":"themes/Butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"eff495eb1584cf4586e33c76e8b2fa6a469a179b","modified":1614241387150},{"_id":"themes/Butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1614241387150},{"_id":"themes/Butterfly/scripts/tag/gallery.js","hash":"94826ea6bcc4d2304199adae12c4e2b272caf529","modified":1614241387172},{"_id":"themes/Butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1614241387150},{"_id":"themes/Butterfly/scripts/tag/hide.js","hash":"f33858ffb9e88191e644796e11d2f901eb332308","modified":1614241387172},{"_id":"themes/Butterfly/scripts/tag/mermaid.js","hash":"35f073021db93699fcac9ef351e26c59c31aadf7","modified":1614241387172},{"_id":"themes/Butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1614241387172},{"_id":"themes/Butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1614241387172},{"_id":"themes/Butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1614241387182},{"_id":"themes/Butterfly/source/css/var.styl","hash":"e92eaefda462315051872b7894a6f6eb70a29006","modified":1614241387182},{"_id":"themes/Butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1614241387182},{"_id":"themes/Butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1614241387183},{"_id":"themes/Butterfly/source/img/bg.jpeg","hash":"b3eb44c8a859a60adf6902f6c30ab7870c1b1e43","modified":1618371884807},{"_id":"themes/Butterfly/source/_data/valine.json","hash":"1a1c458d772ee03aba5efa03f357e9097068cb4e","modified":1614763032695},{"_id":"themes/Butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1614241387183},{"_id":"themes/Butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1614241387183},{"_id":"themes/Butterfly/source/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1614241387184},{"_id":"themes/Butterfly/source/js/main.js","hash":"8cf2fb897890fa5fbbffbe936d6fa80b383584d9","modified":1614241387184},{"_id":"themes/Butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1614241387185},{"_id":"themes/Butterfly/source/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1614241387185},{"_id":"themes/Butterfly/layout/includes/head/Open_Graph.pug","hash":"5390f2aea030486bf78678b910bda177b0ba5d05","modified":1614241387153},{"_id":"themes/Butterfly/layout/includes/head/analytics.pug","hash":"90d01b88d0f406d00184960b1afe9230aec2ebe6","modified":1614241387153},{"_id":"themes/Butterfly/layout/includes/head/config.pug","hash":"d43e7209864627a06b06879867d51841025ab9ee","modified":1614241387153},{"_id":"themes/Butterfly/layout/includes/head/config_site.pug","hash":"798dbbe9146e8e2379b39a49acf8c8a1eeabb8fb","modified":1614241387153},{"_id":"themes/Butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1614241387153},{"_id":"themes/Butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1614241387153},{"_id":"themes/Butterfly/layout/includes/head/preconnect.pug","hash":"e55f8bdb876d5429a908498db1307b94094c0d06","modified":1614241387154},{"_id":"themes/Butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1614241387154},{"_id":"themes/Butterfly/layout/includes/head/site_verification.pug","hash":"62cf37e28795d8b68a0e850ec8c94987b9e08db5","modified":1614241387154},{"_id":"themes/Butterfly/layout/includes/header/index.pug","hash":"c8e3d8944ced189ac27a20e2853735b44eb9cab3","modified":1614241387154},{"_id":"themes/Butterfly/layout/includes/header/menu_item.pug","hash":"14cd0f9c0c578512896b487263cd48570d74771a","modified":1614241387154},{"_id":"themes/Butterfly/layout/includes/header/nav.pug","hash":"0a8b0b3d82bef350fea5b42b1f69dbb6551b8627","modified":1614241387154},{"_id":"themes/Butterfly/layout/includes/header/post-info.pug","hash":"136fb938ace9904f7f68725fcb543312ccfeef2c","modified":1614241387154},{"_id":"themes/Butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1614241387155},{"_id":"themes/Butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":1614241387155},{"_id":"themes/Butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1614241387155},{"_id":"themes/Butterfly/layout/includes/mixins/article-sort.pug","hash":"68dfd3c6a0f00b3ffc0333c81e165b4626f7425f","modified":1614241387155},{"_id":"themes/Butterfly/layout/includes/mixins/post-ui.pug","hash":"6058de23612ab1ed17d2ad93f5866d5f745135f0","modified":1614241387155},{"_id":"themes/Butterfly/layout/includes/page/artitalk.pug","hash":"2a435df727ba4a0e6678c06c1b4b83745dfef841","modified":1614241387156},{"_id":"themes/Butterfly/layout/includes/page/categories.pug","hash":"1f30952fed73dec21b42e2e30b7fe2e84618d2e4","modified":1614241387156},{"_id":"themes/Butterfly/layout/includes/page/default-page.pug","hash":"dbec869c62135695495703a29ad7655e9965d461","modified":1614241387156},{"_id":"themes/Butterfly/layout/includes/page/flink.pug","hash":"45f0d36b1ac686b5984909dae55d3c522f549c3a","modified":1614241387156},{"_id":"themes/Butterfly/layout/includes/page/tags.pug","hash":"93d4ebc7dc8228c7a10ddeb5a553d0dcdabbe145","modified":1614241387156},{"_id":"themes/Butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1614241387157},{"_id":"themes/Butterfly/layout/includes/post/reward.pug","hash":"edebe930a2e3c4a4de5a35b9c1b1409cdd401372","modified":1614241387157},{"_id":"themes/Butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":1614241387157},{"_id":"themes/Butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":1614241387162},{"_id":"themes/Butterfly/layout/includes/third-party/pangu.pug","hash":"d5fec7dedc52ab23865fb4db002755e9bdaadc9f","modified":1614241387164},{"_id":"themes/Butterfly/layout/includes/third-party/pjax.pug","hash":"5b61b65dd030aed0cd2446549cf150ecdac49156","modified":1614241387164},{"_id":"themes/Butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1614241387164},{"_id":"themes/Butterfly/layout/includes/third-party/subtitle.pug","hash":"50f0574a1db1c62d56042b10880ba348d65d8fd9","modified":1614241387166},{"_id":"themes/Butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1614241387166},{"_id":"themes/Butterfly/layout/includes/widget/card_announcement.pug","hash":"3d8e3706a056389176f55dd21956aabc78046761","modified":1614241387167},{"_id":"themes/Butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1614241387167},{"_id":"themes/Butterfly/layout/includes/widget/card_author.pug","hash":"64bd872377d190966727668a00b156a8b3d95da3","modified":1614241387167},{"_id":"themes/Butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1614241387167},{"_id":"themes/Butterfly/layout/includes/widget/card_newest_comment.pug","hash":"36b368516b5a746be84a6aa08767ee24d220d509","modified":1614241387167},{"_id":"themes/Butterfly/layout/includes/widget/card_post_toc.pug","hash":"ae9336bf31cdad08ff586ead4295912a96563c76","modified":1614241387167},{"_id":"themes/Butterfly/layout/includes/widget/card_recent_post.pug","hash":"e356f916ceb28702812d8f66c1fea0ae75eece47","modified":1614241387168},{"_id":"themes/Butterfly/layout/includes/widget/card_self.pug","hash":"a1b2f5575b6804c5c4b9288db143b5164cbbd289","modified":1614241387168},{"_id":"themes/Butterfly/layout/includes/widget/card_tags.pug","hash":"1c9652cf71da32414a79b0ea6704421a59bdce2e","modified":1614241387168},{"_id":"themes/Butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":1614241387168},{"_id":"themes/Butterfly/layout/includes/widget/index.pug","hash":"9e91f2543ab39815309268d07ae248a78887acf9","modified":1614241387168},{"_id":"themes/Butterfly/source/css/_global/function.styl","hash":"eda47f3e807a466ba8275627ea936c5100c43818","modified":1614241387173},{"_id":"themes/Butterfly/source/css/_global/index.styl","hash":"6ba9dcda7ff1ceda4e07c8c08517259e8b7dbcd5","modified":1614241387173},{"_id":"themes/Butterfly/source/css/_layout/404.styl","hash":"d6548e332e6e57e2a7ba2eb53cdd838c3cd1846d","modified":1614241387175},{"_id":"themes/Butterfly/source/css/_layout/aside.styl","hash":"32008b58a76f486854b242ad686d4151bc54bbd6","modified":1614241387175},{"_id":"themes/Butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1614241387176},{"_id":"themes/Butterfly/source/css/_layout/comments.styl","hash":"f1b63892baafa48ab872bc79671d57aafd511f6c","modified":1614241387176},{"_id":"themes/Butterfly/source/css/_layout/footer.styl","hash":"dd8cdf639ba2b726437c77fa7aa8d5edbabe8f9b","modified":1614241387176},{"_id":"themes/Butterfly/source/css/_layout/head.styl","hash":"cb1770e1dfc82ad5fb5ef3dc7f5fa7a5b0dc3297","modified":1614241387176},{"_id":"themes/Butterfly/source/css/_layout/loading.styl","hash":"7d18a7be9cfea65091de3ef00014063d2d649912","modified":1614241387177},{"_id":"themes/Butterfly/source/css/_layout/pagination.styl","hash":"90fe01c968696a9f791cb2b84fca621cbbb56f47","modified":1614241387177},{"_id":"themes/Butterfly/source/css/_layout/post.styl","hash":"3b5ed196e64a0bbd0f93d82dd85a7f3a27c9ec9e","modified":1614241387177},{"_id":"themes/Butterfly/source/css/_layout/relatedposts.styl","hash":"0551c5893d1589a3d17ce161e50ecb1d724cc6e8","modified":1614241387177},{"_id":"themes/Butterfly/source/css/_layout/reward.styl","hash":"ea1ba40dd5954c2ed718a126336fb7f94da4e66f","modified":1614241387177},{"_id":"themes/Butterfly/source/css/_layout/rightside.styl","hash":"7a072589e6097dbe942783131964f2372fdf1eb6","modified":1614241387178},{"_id":"themes/Butterfly/source/css/_layout/sidebar.styl","hash":"7a6e1f21173022a3a1f18a62785cdd657a1af0a1","modified":1614241387178},{"_id":"themes/Butterfly/source/css/_layout/third-party.styl","hash":"788a28f68e29fad5328dc03be2f3268324281652","modified":1614241387178},{"_id":"themes/Butterfly/source/css/_highlight/highlight.styl","hash":"3305ab95795801339bc515affca56c11ddc954e6","modified":1614241387173},{"_id":"themes/Butterfly/source/css/_highlight/theme.styl","hash":"fa7a4c1685f391d60ed863e869b9604b59746c27","modified":1614241387175},{"_id":"themes/Butterfly/source/css/_mode/darkmode.styl","hash":"b59ae684b5baeb5efc7f5ccd053dca768a009ebf","modified":1614241387178},{"_id":"themes/Butterfly/source/css/_mode/readmode.styl","hash":"4dbf1ecdd9837fa77bc8ba9739b62ff704dfda69","modified":1614241387179},{"_id":"themes/Butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":1614241387179},{"_id":"themes/Butterfly/source/css/_page/categories.styl","hash":"e554549f0a0ae85362f0b0e8687981741f486f6b","modified":1614241387179},{"_id":"themes/Butterfly/source/css/_page/common.styl","hash":"a6f8637e90e44e23338209d4a3438e3e67766971","modified":1614241387179},{"_id":"themes/Butterfly/source/css/_page/flink.styl","hash":"d60b7a94a7adeac489b8c1afdf7e679994829742","modified":1614241387179},{"_id":"themes/Butterfly/source/css/_page/homepage.styl","hash":"7c4152162a03aa8331a783df5695e4ebbb816a8c","modified":1614241387180},{"_id":"themes/Butterfly/source/css/_page/tags.styl","hash":"9a881c031f463c486bd25248c2814fd09f97892b","modified":1614241387180},{"_id":"themes/Butterfly/source/css/_search/index.styl","hash":"89e744abc5e41f4855e7b87b13b854f4ec4ffc0e","modified":1614241387180},{"_id":"themes/Butterfly/source/css/_search/local-search.styl","hash":"51f2bd03a2d0787911d0c090fb555a664b3fac8b","modified":1614241387180},{"_id":"themes/Butterfly/source/css/_tags/button.styl","hash":"a7fc7624a8d893bdf9444f14154484c29c790e99","modified":1614241387180},{"_id":"themes/Butterfly/source/css/_tags/gallery.styl","hash":"53ecae272e16223a436c497abbf25dd5f0fc4aaa","modified":1614241387181},{"_id":"themes/Butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":1614241387181},{"_id":"themes/Butterfly/source/css/_tags/hide.styl","hash":"21964fdd6d74ffbea519418bab65024aee5f3736","modified":1614241387181},{"_id":"themes/Butterfly/source/css/_tags/note.styl","hash":"86fee274a62f7f034547342930f445c47378eb55","modified":1614241387181},{"_id":"themes/Butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":1614241387182},{"_id":"themes/Butterfly/source/css/_search/algolia.styl","hash":"6b05ca4409d2dc09e123af4e0af9f9d0f7142b73","modified":1614241387180},{"_id":"themes/Butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1614241387182},{"_id":"themes/Butterfly/source/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1614241387184},{"_id":"themes/Butterfly/source/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1614241387184},{"_id":"themes/Butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":1614241387158},{"_id":"themes/Butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1614241387157},{"_id":"themes/Butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"ef1b2b5b980d6aeaa5d06b97d1afc9644b155a16","modified":1614241387158},{"_id":"themes/Butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"e3bf847553515174f6085df982f0623e9783db7a","modified":1614241387158},{"_id":"themes/Butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"76c061a16d7e5935f02acd27c6cdb4933c642b97","modified":1614241387159},{"_id":"themes/Butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"bba9871f446c10ffcc8fa9023f5a2eb701a86bae","modified":1614241387158},{"_id":"themes/Butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1614241387159},{"_id":"themes/Butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1614241387159},{"_id":"themes/Butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1614241387159},{"_id":"themes/Butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1614241387160},{"_id":"themes/Butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1614241387159},{"_id":"themes/Butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1614241387160},{"_id":"themes/Butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b2fb4af74d54f1daa39d4afc321d38a2a72e0ddd","modified":1614241387160},{"_id":"themes/Butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f617cacf5d1e8335abba96ee1ce4b79c17411e1e","modified":1614241387160},{"_id":"themes/Butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"99dbf2b87b372f07315a3b879a77131eaf3da066","modified":1614241387160},{"_id":"themes/Butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"353ebd0bdecdfde6dee32c3aa208cc87c72b15c0","modified":1614241387160},{"_id":"themes/Butterfly/layout/includes/third-party/comments/js.pug","hash":"bafb3d5710824caa59a56017afb058fd2b4eac65","modified":1614241387161},{"_id":"themes/Butterfly/layout/includes/third-party/comments/index.pug","hash":"da9813f8dc0d388869c15413cf056012cfb69e1a","modified":1614241387161},{"_id":"themes/Butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1614241387161},{"_id":"themes/Butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"881618ffb26b13ad6276a65e34846e6bda2145cb","modified":1614241387161},{"_id":"themes/Butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b871ea208e36398b4d668db9a9a0b61c79415381","modified":1614241387161},{"_id":"themes/Butterfly/layout/includes/third-party/comments/valine.pug","hash":"5b015bb6fc61d136512f78aa4e3bc3165afb9cf2","modified":1614241387161},{"_id":"themes/Butterfly/layout/includes/third-party/comments/waline.pug","hash":"544fb85361c61dffc39a87e808d8bda04cfd863f","modified":1614241387162},{"_id":"themes/Butterfly/layout/includes/third-party/math/mathjax.pug","hash":"4afc12ce42d067fa4012039aa444343a36f73599","modified":1614241387162},{"_id":"themes/Butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1614241387162},{"_id":"themes/Butterfly/layout/includes/third-party/math/katex.pug","hash":"21b7ec96c606823d3d72e72775495ef77502b4cb","modified":1614241387162},{"_id":"themes/Butterfly/layout/includes/third-party/math/mermaid.pug","hash":"3f3a3cd8bea2103dedd754f767aca5cb84d5f586","modified":1614241387162},{"_id":"themes/Butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"9820d731bb66a1d9c2e0083361d0c99c68c93fdf","modified":1614241387163},{"_id":"themes/Butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"59b4c26a827ace5a54855881d199977103ff6f50","modified":1614241387164},{"_id":"themes/Butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"18dcf05ab58107bbff426376aef2577f59583fc2","modified":1614241387163},{"_id":"themes/Butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"9657b1b08ff3f98e49ca250ed47a81b8b202ac7a","modified":1614241387164},{"_id":"themes/Butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"cb38ffe911023092a90a28f2ba8317a92b22cd0c","modified":1614241387163},{"_id":"themes/Butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"a13246714c9b9c6d6e5093f131a57bb49d653940","modified":1614241387163},{"_id":"themes/Butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1614241387165},{"_id":"themes/Butterfly/layout/includes/third-party/search/algolia.pug","hash":"d8f59e94eafc669c49349561dc5bbea3915aecb7","modified":1614241387165},{"_id":"themes/Butterfly/layout/includes/third-party/search/local-search.pug","hash":"613280d61b8ab9612014ec016ae3d3698d36fd1a","modified":1614241387165},{"_id":"themes/Butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1614241387165},{"_id":"themes/Butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1614241387165},{"_id":"themes/Butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1614241387166},{"_id":"themes/Butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":1614241387166},{"_id":"themes/Butterfly/source/css/_highlight/highlight/diff.styl","hash":"3bcd66576d13db8f93fa5b799a973d55e060a708","modified":1614241387174},{"_id":"themes/Butterfly/source/css/_highlight/highlight/index.styl","hash":"52c63a50a37fa315753e72b3661676156aeae794","modified":1614241387174},{"_id":"themes/Butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1614241387174},{"_id":"themes/Butterfly/source/css/_highlight/prismjs/index.styl","hash":"897a18a82c0cad141b3ed9e2f1b4af60c24c334b","modified":1614241387175},{"_id":"themes/Butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"d40f1baec16c4a62e4a3a9a0379d1ca3ac6746b2","modified":1614241387175},{"_id":"themes/Butterfly/source/img/avatar.jpeg","hash":"9211fe14e648515a8f7d5c7842e909efd24fb927","modified":1618370865318},{"_id":"public/atom.xml","hash":"324684ef7d143905064eff37b47e85495002abb8","modified":1619096302926},{"_id":"public/search.xml","hash":"a3b27c5b6632501fe00c10a151c6112dd16f1bb0","modified":1619096302926},{"_id":"public/sitemap.xml","hash":"18302dede2707ac98cf289b4a27d628e77b3bd24","modified":1619158830830},{"_id":"public/categories/index.html","hash":"49c1a3df3f40ad4f0dea828e3adcdf607072d7e1","modified":1619158830830},{"_id":"public/tags/index.html","hash":"116a9e0927055deadfeba3fa88879c5442a0746b","modified":1619158830830},{"_id":"public/tags/Markdown/index.html","hash":"7b4cb58304322b6767b6f2cf9217b61152e43980","modified":1619158830830},{"_id":"public/tags/机器学习/index.html","hash":"cc073590e2fbcdf9773b3c62f16b972f571283e4","modified":1619158830830},{"_id":"public/2021/04/22/算法题3/index.html","hash":"62f36b10b3c4712e59c7630cfc50748f74ae64ec","modified":1619096302926},{"_id":"public/2021/04/21/算法题2/index.html","hash":"312bd4064478c29fcf577e8bed0ac16d5a7093e3","modified":1619096302926},{"_id":"public/2021/04/14/机器学习/index.html","hash":"5615eaf25de1925b77aefaccaf29c05957436dae","modified":1619096302926},{"_id":"public/2021/04/20/算法题1/index.html","hash":"9e3d9052b9d5592200b82762dfba96915d28b8cf","modified":1619096302926},{"_id":"public/2021/03/08/Markdown语法/index.html","hash":"cdd72108e40805d7635b841f6530753f2a02c455","modified":1619096302926},{"_id":"public/2021/03/08/webpack打包后的代码是怎么样的/index.html","hash":"200a831ec5cde0e44f29581aefdaf341596ec5fb","modified":1619096302926},{"_id":"public/archives/index.html","hash":"eef87906237fe6f3c1806af627c5b2bc69bdcba9","modified":1619158830830},{"_id":"public/archives/2021/03/index.html","hash":"c668a58e22c2889e407a6a1036acfb103b44870f","modified":1619158830830},{"_id":"public/archives/2021/index.html","hash":"fbfdc65b59c1c94e5e7df09196a34999222b17da","modified":1619158830830},{"_id":"public/archives/2021/04/index.html","hash":"7e39f3f8bccdb6c9d1c4f80c7827713b42edc183","modified":1619158830830},{"_id":"public/categories/Markdown/index.html","hash":"79e4098987b2c54ed3f5be35c6a8d53ae451581a","modified":1619158830830},{"_id":"public/categories/每日一题/index.html","hash":"15c6d570c234fe0bee45c8ef1a2f649ecb69e61f","modified":1619158830830},{"_id":"public/tags/webpack/index.html","hash":"ef87b0b8caeb65f1b1bc8cb949bcb184b6c962cf","modified":1619158830830},{"_id":"public/index.html","hash":"aebf4e1aad29abd88e815ea27c355b09f853ad3f","modified":1619158830830},{"_id":"public/tags/算法/index.html","hash":"1cb41eb7a3345723f71cf395e4bb6708844b88bf","modified":1619158830830},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1619096302926},{"_id":"public/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1619096302926},{"_id":"public/img/bg.jpeg","hash":"b3eb44c8a859a60adf6902f6c30ab7870c1b1e43","modified":1619096302926},{"_id":"public/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1619096302926},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1619096302926},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1619096302926},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1619096302926},{"_id":"public/img/avatar.jpeg","hash":"9211fe14e648515a8f7d5c7842e909efd24fb927","modified":1619096302926},{"_id":"public/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1619096302926},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1619096302926},{"_id":"public/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1619096302926},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1619096302926},{"_id":"public/js/main.js","hash":"8cf2fb897890fa5fbbffbe936d6fa80b383584d9","modified":1619096302926},{"_id":"public/css/index.css","hash":"54d7ae47406d6081c8b797e57c4c5af0cb495667","modified":1619096302926}],"Category":[{"name":"Markdown","_id":"cknsw4vcr0004aycm11xeb3y0"},{"name":"每日一题","_id":"cknsw4vcw000aaycmht0dahl8"}],"Data":[],"Page":[{"title":"分类","date":"2021-02-25T08:44:32.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-02-25 16:44:32\ntype: categories\ncomments: false\n---\n","updated":"2021-04-12T06:12:42.232Z","path":"categories/index.html","layout":"page","_id":"cknsw4vcj0000aycm8p98dw7k","content":"","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"标签","date":"2021-02-25T08:44:32.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-02-25 16:44:32\ntype: tags\ncomments: false\n---\n","updated":"2021-04-12T06:12:19.049Z","path":"tags/index.html","layout":"page","_id":"cknsw4vco0002aycm0aq9eat4","content":"","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""}],"Post":[{"title":"Markdown语法","date":"2021-03-08T08:32:17.000Z","_content":"## 基本语法\n\n| 元素 | Markdown语法 |\n| ---- | ----------- |\n| 标题 | # h1 <br> ## h2 <br> ### h3 |\n| 粗体 | `**粗体**` |\n| 斜体 | `*斜体*` |\n| 引用块 | `>引用块` |\n| 有序列表 | `1. 列表1 2.列表2 3. 列表3` |\n| 无序列表 | `- 列表1 - 列表2 - 列表3` |\n| 代码 | ``代码`` |\n| 分割线 | `---` |\n| 链接 | `[title](https://www.example.com` |\n| 图片 | `![alt text](image.jpg)` |\n\n## 扩展语法\n\n| 元素 | Markdown语法 |\n| ---- | ----------- |\n| 表格 |  |\n| 代码块 | ` ```代码块``` ` |\n| 脚注 | `Here's a sentence with a footnote. [^1][^1]: This is the footnote.` |\n| 标题编号 | `### My Great Heading {#custom-id}` |\n| 定义列表 | `term: definition`  |\n| 删除线 | `~~删除线~~`  |\n| 任务列表 | `- [x] Write the press release - [ ] Update the website - [ ] Contact the media` |\n","source":"_posts/Markdown语法.md","raw":"---\ntitle: Markdown语法\ndate: 2021-03-08 16:32:17\ntags: Markdown\ncategories: Markdown\n---\n## 基本语法\n\n| 元素 | Markdown语法 |\n| ---- | ----------- |\n| 标题 | # h1 <br> ## h2 <br> ### h3 |\n| 粗体 | `**粗体**` |\n| 斜体 | `*斜体*` |\n| 引用块 | `>引用块` |\n| 有序列表 | `1. 列表1 2.列表2 3. 列表3` |\n| 无序列表 | `- 列表1 - 列表2 - 列表3` |\n| 代码 | ``代码`` |\n| 分割线 | `---` |\n| 链接 | `[title](https://www.example.com` |\n| 图片 | `![alt text](image.jpg)` |\n\n## 扩展语法\n\n| 元素 | Markdown语法 |\n| ---- | ----------- |\n| 表格 |  |\n| 代码块 | ` ```代码块``` ` |\n| 脚注 | `Here's a sentence with a footnote. [^1][^1]: This is the footnote.` |\n| 标题编号 | `### My Great Heading {#custom-id}` |\n| 定义列表 | `term: definition`  |\n| 删除线 | `~~删除线~~`  |\n| 任务列表 | `- [x] Write the press release - [ ] Update the website - [ ] Contact the media` |\n","slug":"Markdown语法","published":1,"updated":"2021-04-12T03:54:42.661Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknsw4vcl0001aycm498t0l18","content":"<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><table>\n<thead>\n<tr>\n<th>元素</th>\n<th>Markdown语法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标题</td>\n<td># h1 <br> ## h2 <br> ### h3</td>\n</tr>\n<tr>\n<td>粗体</td>\n<td><code>**粗体**</code></td>\n</tr>\n<tr>\n<td>斜体</td>\n<td><code>*斜体*</code></td>\n</tr>\n<tr>\n<td>引用块</td>\n<td><code>&gt;引用块</code></td>\n</tr>\n<tr>\n<td>有序列表</td>\n<td><code>1. 列表1 2.列表2 3. 列表3</code></td>\n</tr>\n<tr>\n<td>无序列表</td>\n<td><code>- 列表1 - 列表2 - 列表3</code></td>\n</tr>\n<tr>\n<td>代码</td>\n<td><code>代码</code></td>\n</tr>\n<tr>\n<td>分割线</td>\n<td><code>---</code></td>\n</tr>\n<tr>\n<td>链接</td>\n<td><code>[title](https://www.example.com</code></td>\n</tr>\n<tr>\n<td>图片</td>\n<td><code>![alt text](image.jpg)</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"扩展语法\"><a href=\"#扩展语法\" class=\"headerlink\" title=\"扩展语法\"></a>扩展语法</h2><table>\n<thead>\n<tr>\n<th>元素</th>\n<th>Markdown语法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>表格</td>\n<td></td>\n</tr>\n<tr>\n<td>代码块</td>\n<td><code>```代码块```</code></td>\n</tr>\n<tr>\n<td>脚注</td>\n<td><code>Here&#39;s a sentence with a footnote. [^1][^1]: This is the footnote.</code></td>\n</tr>\n<tr>\n<td>标题编号</td>\n<td><code>### My Great Heading &#123;#custom-id&#125;</code></td>\n</tr>\n<tr>\n<td>定义列表</td>\n<td><code>term: definition</code></td>\n</tr>\n<tr>\n<td>删除线</td>\n<td><code>~~删除线~~</code></td>\n</tr>\n<tr>\n<td>任务列表</td>\n<td><code>- [x] Write the press release - [ ] Update the website - [ ] Contact the media</code></td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><table>\n<thead>\n<tr>\n<th>元素</th>\n<th>Markdown语法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>标题</td>\n<td># h1 <br> ## h2 <br> ### h3</td>\n</tr>\n<tr>\n<td>粗体</td>\n<td><code>**粗体**</code></td>\n</tr>\n<tr>\n<td>斜体</td>\n<td><code>*斜体*</code></td>\n</tr>\n<tr>\n<td>引用块</td>\n<td><code>&gt;引用块</code></td>\n</tr>\n<tr>\n<td>有序列表</td>\n<td><code>1. 列表1 2.列表2 3. 列表3</code></td>\n</tr>\n<tr>\n<td>无序列表</td>\n<td><code>- 列表1 - 列表2 - 列表3</code></td>\n</tr>\n<tr>\n<td>代码</td>\n<td><code>代码</code></td>\n</tr>\n<tr>\n<td>分割线</td>\n<td><code>---</code></td>\n</tr>\n<tr>\n<td>链接</td>\n<td><code>[title](https://www.example.com</code></td>\n</tr>\n<tr>\n<td>图片</td>\n<td><code>![alt text](image.jpg)</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"扩展语法\"><a href=\"#扩展语法\" class=\"headerlink\" title=\"扩展语法\"></a>扩展语法</h2><table>\n<thead>\n<tr>\n<th>元素</th>\n<th>Markdown语法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>表格</td>\n<td></td>\n</tr>\n<tr>\n<td>代码块</td>\n<td><code>```代码块```</code></td>\n</tr>\n<tr>\n<td>脚注</td>\n<td><code>Here&#39;s a sentence with a footnote. [^1][^1]: This is the footnote.</code></td>\n</tr>\n<tr>\n<td>标题编号</td>\n<td><code>### My Great Heading &#123;#custom-id&#125;</code></td>\n</tr>\n<tr>\n<td>定义列表</td>\n<td><code>term: definition</code></td>\n</tr>\n<tr>\n<td>删除线</td>\n<td><code>~~删除线~~</code></td>\n</tr>\n<tr>\n<td>任务列表</td>\n<td><code>- [x] Write the press release - [ ] Update the website - [ ] Contact the media</code></td>\n</tr>\n</tbody></table>\n"},{"title":"webpack打包后的代码是怎么样的","date":"2021-03-08T07:55:59.000Z","_content":"## 准备工作\n\n``` bash\nmkdir webpack\ncd webpack\nnpm init -y\nyarn add webpack webpack-cli -D\n```","source":"_posts/webpack打包后的代码是怎么样的.md","raw":"---\ntitle: webpack打包后的代码是怎么样的\ndate: 2021-03-08 15:55:59\ntags: webpack\n---\n## 准备工作\n\n``` bash\nmkdir webpack\ncd webpack\nnpm init -y\nyarn add webpack webpack-cli -D\n```","slug":"webpack打包后的代码是怎么样的","published":1,"updated":"2021-03-08T08:07:49.370Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknsw4vcp0003aycmhak19257","content":"<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir webpack</span><br><span class=\"line\"><span class=\"built_in\">cd</span> webpack</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">yarn add webpack webpack-cli -D</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir webpack</span><br><span class=\"line\"><span class=\"built_in\">cd</span> webpack</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">yarn add webpack webpack-cli -D</span><br></pre></td></tr></table></figure>"},{"title":"机器学习","date":"2021-04-14T07:12:59.000Z","_content":"## 什么是机器学习\n\n你可能每天用到它许多次却不知道它。 每次你用谷歌或者必应搜索，它们很好用 是因为它们的机器学习软件已经计算出如何对网页排名 脸书或者苹果的照片应用在照片中识别出你的朋友， 这也是机器学习。 每次你阅读你的邮件 垃圾邮件过滤器把你从海量的垃圾邮件中解救出来， 这也是因为你的计算机学习了如何从非垃圾邮件中辨别垃圾邮件。 这就是机器学习。 这是一门是让计算机 无需显式编程 (explicitly programmed) 就能自主学习的学科。 我正在做的其中一个研究项目是让机器人去 整理房间。 你要怎样去做这个？ 你能做的是使机器人看你的演示任务和 从中学习。 机器人会看你拿起了什么东西，放在了哪里 试着去做同样的事情，即使在你不在的时候。 我对此感到兴奋的原因之一是 AI ，即 人工智能问题。 建立真正的智能机器， 就可以做任何你和我也能做的事情。 许多科学家认为在这方面取得进展的最好方法 是通过一种叫做神经网络的学习算法 这种算法模仿人类大脑的工作过程， 之后我也会教你。\n\n## TensorFlow.js\n\nTensorFlow.js 是Google将机器学习(Machine Learning)TensorFlow框架的JavaScript版本，通过TensorFlow.js，让JavaScript开发人员也有机会加入机器学习的领域。加上前端领域的生态圈支持，让机器学习在浏览器上有了更多发挥的空间！例如结合摄影机、移动设备的陀螺仪等等，只要设备与浏览器支援，都能够发生更多不同的变化，同时借由在客户端浏览器上执行的优势，节省后端学习的成本。\n\n## TensorFlow.js的特色与基本组成\n\n由于TensorFlow.js是由JavaScript编写而成，因此只要与浏览器相关的应用，都可以与TensorFlow.js直接整合，这意味着我们可以将浏览器功能与机器学习搭配起来，组合成更多元的Web Application。\nTensorFlow.js也支持WebGL，因此即使在浏览器上，我们也能使用GPU来加速运算结果，不用担心在浏览器上的性能限制。\nTensorFlow.js分成低阶与高阶两组API。\n低阶的API是由 deeplearn.js 衍生，负责处理一些低阶如线性代数的数据运算等等，来协助我们处理机器学习中的数学运算部分。\n而高阶的API则是用来包装一些常用的机器学习演算法，同时允许我们载入训练好的模型，像是由Keras学习的模型等等。\n\n## 机器学习基本概念\n\n先来简单讲讲一般机器学习是怎么做的，在机器学习中，通常我们会针对一个题目，给予一组学习数据清单，这些数据包含了问题与答案，接着通过机器学习的各种算法，来训练出一个针对这个题目的模型。\n这个模型通常就代表了一个公式，只要将题目带进去公式，就能够算出答案，而这个公式怎么来的呢？就是通过机器学习算法，这些算法通常会先随机产生一个公式(也就是模型)，接着将学习数据带进去计算出预测值，并与正确答案比较，并通过不断的调整模型内容，不断想办法降低预测值与正确答案的差距，直到预测值与足够接近正确答案为止。\n简单来说，就是经验法则啦！刚开始学一项知识的时候，得到的结果会与预期落差很大，借由不断学到正确知识后，就会与预期越来越接近！\n","source":"_posts/机器学习.md","raw":"---\ntitle: 机器学习\ndate: 2021-04-14 15:12:59\ntags: 机器学习\n---\n## 什么是机器学习\n\n你可能每天用到它许多次却不知道它。 每次你用谷歌或者必应搜索，它们很好用 是因为它们的机器学习软件已经计算出如何对网页排名 脸书或者苹果的照片应用在照片中识别出你的朋友， 这也是机器学习。 每次你阅读你的邮件 垃圾邮件过滤器把你从海量的垃圾邮件中解救出来， 这也是因为你的计算机学习了如何从非垃圾邮件中辨别垃圾邮件。 这就是机器学习。 这是一门是让计算机 无需显式编程 (explicitly programmed) 就能自主学习的学科。 我正在做的其中一个研究项目是让机器人去 整理房间。 你要怎样去做这个？ 你能做的是使机器人看你的演示任务和 从中学习。 机器人会看你拿起了什么东西，放在了哪里 试着去做同样的事情，即使在你不在的时候。 我对此感到兴奋的原因之一是 AI ，即 人工智能问题。 建立真正的智能机器， 就可以做任何你和我也能做的事情。 许多科学家认为在这方面取得进展的最好方法 是通过一种叫做神经网络的学习算法 这种算法模仿人类大脑的工作过程， 之后我也会教你。\n\n## TensorFlow.js\n\nTensorFlow.js 是Google将机器学习(Machine Learning)TensorFlow框架的JavaScript版本，通过TensorFlow.js，让JavaScript开发人员也有机会加入机器学习的领域。加上前端领域的生态圈支持，让机器学习在浏览器上有了更多发挥的空间！例如结合摄影机、移动设备的陀螺仪等等，只要设备与浏览器支援，都能够发生更多不同的变化，同时借由在客户端浏览器上执行的优势，节省后端学习的成本。\n\n## TensorFlow.js的特色与基本组成\n\n由于TensorFlow.js是由JavaScript编写而成，因此只要与浏览器相关的应用，都可以与TensorFlow.js直接整合，这意味着我们可以将浏览器功能与机器学习搭配起来，组合成更多元的Web Application。\nTensorFlow.js也支持WebGL，因此即使在浏览器上，我们也能使用GPU来加速运算结果，不用担心在浏览器上的性能限制。\nTensorFlow.js分成低阶与高阶两组API。\n低阶的API是由 deeplearn.js 衍生，负责处理一些低阶如线性代数的数据运算等等，来协助我们处理机器学习中的数学运算部分。\n而高阶的API则是用来包装一些常用的机器学习演算法，同时允许我们载入训练好的模型，像是由Keras学习的模型等等。\n\n## 机器学习基本概念\n\n先来简单讲讲一般机器学习是怎么做的，在机器学习中，通常我们会针对一个题目，给予一组学习数据清单，这些数据包含了问题与答案，接着通过机器学习的各种算法，来训练出一个针对这个题目的模型。\n这个模型通常就代表了一个公式，只要将题目带进去公式，就能够算出答案，而这个公式怎么来的呢？就是通过机器学习算法，这些算法通常会先随机产生一个公式(也就是模型)，接着将学习数据带进去计算出预测值，并与正确答案比较，并通过不断的调整模型内容，不断想办法降低预测值与正确答案的差距，直到预测值与足够接近正确答案为止。\n简单来说，就是经验法则啦！刚开始学一项知识的时候，得到的结果会与预期落差很大，借由不断学到正确知识后，就会与预期越来越接近！\n","slug":"机器学习","published":1,"updated":"2021-04-14T09:09:27.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknsw4vcs0006aycmep4f1dew","content":"<h2 id=\"什么是机器学习\"><a href=\"#什么是机器学习\" class=\"headerlink\" title=\"什么是机器学习\"></a>什么是机器学习</h2><p>你可能每天用到它许多次却不知道它。 每次你用谷歌或者必应搜索，它们很好用 是因为它们的机器学习软件已经计算出如何对网页排名 脸书或者苹果的照片应用在照片中识别出你的朋友， 这也是机器学习。 每次你阅读你的邮件 垃圾邮件过滤器把你从海量的垃圾邮件中解救出来， 这也是因为你的计算机学习了如何从非垃圾邮件中辨别垃圾邮件。 这就是机器学习。 这是一门是让计算机 无需显式编程 (explicitly programmed) 就能自主学习的学科。 我正在做的其中一个研究项目是让机器人去 整理房间。 你要怎样去做这个？ 你能做的是使机器人看你的演示任务和 从中学习。 机器人会看你拿起了什么东西，放在了哪里 试着去做同样的事情，即使在你不在的时候。 我对此感到兴奋的原因之一是 AI ，即 人工智能问题。 建立真正的智能机器， 就可以做任何你和我也能做的事情。 许多科学家认为在这方面取得进展的最好方法 是通过一种叫做神经网络的学习算法 这种算法模仿人类大脑的工作过程， 之后我也会教你。</p>\n<h2 id=\"TensorFlow-js\"><a href=\"#TensorFlow-js\" class=\"headerlink\" title=\"TensorFlow.js\"></a>TensorFlow.js</h2><p>TensorFlow.js 是Google将机器学习(Machine Learning)TensorFlow框架的JavaScript版本，通过TensorFlow.js，让JavaScript开发人员也有机会加入机器学习的领域。加上前端领域的生态圈支持，让机器学习在浏览器上有了更多发挥的空间！例如结合摄影机、移动设备的陀螺仪等等，只要设备与浏览器支援，都能够发生更多不同的变化，同时借由在客户端浏览器上执行的优势，节省后端学习的成本。</p>\n<h2 id=\"TensorFlow-js的特色与基本组成\"><a href=\"#TensorFlow-js的特色与基本组成\" class=\"headerlink\" title=\"TensorFlow.js的特色与基本组成\"></a>TensorFlow.js的特色与基本组成</h2><p>由于TensorFlow.js是由JavaScript编写而成，因此只要与浏览器相关的应用，都可以与TensorFlow.js直接整合，这意味着我们可以将浏览器功能与机器学习搭配起来，组合成更多元的Web Application。<br>TensorFlow.js也支持WebGL，因此即使在浏览器上，我们也能使用GPU来加速运算结果，不用担心在浏览器上的性能限制。<br>TensorFlow.js分成低阶与高阶两组API。<br>低阶的API是由 deeplearn.js 衍生，负责处理一些低阶如线性代数的数据运算等等，来协助我们处理机器学习中的数学运算部分。<br>而高阶的API则是用来包装一些常用的机器学习演算法，同时允许我们载入训练好的模型，像是由Keras学习的模型等等。</p>\n<h2 id=\"机器学习基本概念\"><a href=\"#机器学习基本概念\" class=\"headerlink\" title=\"机器学习基本概念\"></a>机器学习基本概念</h2><p>先来简单讲讲一般机器学习是怎么做的，在机器学习中，通常我们会针对一个题目，给予一组学习数据清单，这些数据包含了问题与答案，接着通过机器学习的各种算法，来训练出一个针对这个题目的模型。<br>这个模型通常就代表了一个公式，只要将题目带进去公式，就能够算出答案，而这个公式怎么来的呢？就是通过机器学习算法，这些算法通常会先随机产生一个公式(也就是模型)，接着将学习数据带进去计算出预测值，并与正确答案比较，并通过不断的调整模型内容，不断想办法降低预测值与正确答案的差距，直到预测值与足够接近正确答案为止。<br>简单来说，就是经验法则啦！刚开始学一项知识的时候，得到的结果会与预期落差很大，借由不断学到正确知识后，就会与预期越来越接近！</p>\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h2 id=\"什么是机器学习\"><a href=\"#什么是机器学习\" class=\"headerlink\" title=\"什么是机器学习\"></a>什么是机器学习</h2><p>你可能每天用到它许多次却不知道它。 每次你用谷歌或者必应搜索，它们很好用 是因为它们的机器学习软件已经计算出如何对网页排名 脸书或者苹果的照片应用在照片中识别出你的朋友， 这也是机器学习。 每次你阅读你的邮件 垃圾邮件过滤器把你从海量的垃圾邮件中解救出来， 这也是因为你的计算机学习了如何从非垃圾邮件中辨别垃圾邮件。 这就是机器学习。 这是一门是让计算机 无需显式编程 (explicitly programmed) 就能自主学习的学科。 我正在做的其中一个研究项目是让机器人去 整理房间。 你要怎样去做这个？ 你能做的是使机器人看你的演示任务和 从中学习。 机器人会看你拿起了什么东西，放在了哪里 试着去做同样的事情，即使在你不在的时候。 我对此感到兴奋的原因之一是 AI ，即 人工智能问题。 建立真正的智能机器， 就可以做任何你和我也能做的事情。 许多科学家认为在这方面取得进展的最好方法 是通过一种叫做神经网络的学习算法 这种算法模仿人类大脑的工作过程， 之后我也会教你。</p>\n<h2 id=\"TensorFlow-js\"><a href=\"#TensorFlow-js\" class=\"headerlink\" title=\"TensorFlow.js\"></a>TensorFlow.js</h2><p>TensorFlow.js 是Google将机器学习(Machine Learning)TensorFlow框架的JavaScript版本，通过TensorFlow.js，让JavaScript开发人员也有机会加入机器学习的领域。加上前端领域的生态圈支持，让机器学习在浏览器上有了更多发挥的空间！例如结合摄影机、移动设备的陀螺仪等等，只要设备与浏览器支援，都能够发生更多不同的变化，同时借由在客户端浏览器上执行的优势，节省后端学习的成本。</p>\n<h2 id=\"TensorFlow-js的特色与基本组成\"><a href=\"#TensorFlow-js的特色与基本组成\" class=\"headerlink\" title=\"TensorFlow.js的特色与基本组成\"></a>TensorFlow.js的特色与基本组成</h2><p>由于TensorFlow.js是由JavaScript编写而成，因此只要与浏览器相关的应用，都可以与TensorFlow.js直接整合，这意味着我们可以将浏览器功能与机器学习搭配起来，组合成更多元的Web Application。<br>TensorFlow.js也支持WebGL，因此即使在浏览器上，我们也能使用GPU来加速运算结果，不用担心在浏览器上的性能限制。<br>TensorFlow.js分成低阶与高阶两组API。<br>低阶的API是由 deeplearn.js 衍生，负责处理一些低阶如线性代数的数据运算等等，来协助我们处理机器学习中的数学运算部分。<br>而高阶的API则是用来包装一些常用的机器学习演算法，同时允许我们载入训练好的模型，像是由Keras学习的模型等等。</p>\n<h2 id=\"机器学习基本概念\"><a href=\"#机器学习基本概念\" class=\"headerlink\" title=\"机器学习基本概念\"></a>机器学习基本概念</h2><p>先来简单讲讲一般机器学习是怎么做的，在机器学习中，通常我们会针对一个题目，给予一组学习数据清单，这些数据包含了问题与答案，接着通过机器学习的各种算法，来训练出一个针对这个题目的模型。<br>这个模型通常就代表了一个公式，只要将题目带进去公式，就能够算出答案，而这个公式怎么来的呢？就是通过机器学习算法，这些算法通常会先随机产生一个公式(也就是模型)，接着将学习数据带进去计算出预测值，并与正确答案比较，并通过不断的调整模型内容，不断想办法降低预测值与正确答案的差距，直到预测值与足够接近正确答案为止。<br>简单来说，就是经验法则啦！刚开始学一项知识的时候，得到的结果会与预期落差很大，借由不断学到正确知识后，就会与预期越来越接近！</p>\n"},{"title":"算法题1","date":"2021-04-20T12:04:07.000Z","_content":"## 题目（中等）\n\n二维数组中的查找\n\n在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的\n一个二维数组和一个整数，判断数组中是否含有该整数。\n\n## 思路\n\n1.使用两层循环遍历，时间复杂度o(n^2)\n\n2.利用递增的特定，可以从左上角开始遍历，当前数值比所求的值小，向右，当前数值比所求的值大，向上，时间复杂度o(n)\n\n## 代码\n```\n var findNumber = function(matrix,target){\n    if(!matrix.length) return false;\n    let x = matrix.length - 1,y=0;\n    while(x>=0;y < matrix[0].length){\n        if(matrix[x][y] === target){\n            return true;\n        }else if (matrix[x][y] > target){\n            x--\n        }else {\n            y++\n        }\n    }\n} \n```","source":"_posts/算法题1.md","raw":"---\ntitle: 算法题1\ndate: 2021-04-20 20:04:07\ntags: 算法\ncategories: 每日一题\n---\n## 题目（中等）\n\n二维数组中的查找\n\n在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的\n一个二维数组和一个整数，判断数组中是否含有该整数。\n\n## 思路\n\n1.使用两层循环遍历，时间复杂度o(n^2)\n\n2.利用递增的特定，可以从左上角开始遍历，当前数值比所求的值小，向右，当前数值比所求的值大，向上，时间复杂度o(n)\n\n## 代码\n```\n var findNumber = function(matrix,target){\n    if(!matrix.length) return false;\n    let x = matrix.length - 1,y=0;\n    while(x>=0;y < matrix[0].length){\n        if(matrix[x][y] === target){\n            return true;\n        }else if (matrix[x][y] > target){\n            x--\n        }else {\n            y++\n        }\n    }\n} \n```","slug":"算法题1","published":1,"updated":"2021-04-21T12:06:17.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknsw4vcu0007aycm9z9j6hhg","content":"<h2 id=\"题目（中等）\"><a href=\"#题目（中等）\" class=\"headerlink\" title=\"题目（中等）\"></a>题目（中等）</h2><p>二维数组中的查找</p>\n<p>在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的<br>一个二维数组和一个整数，判断数组中是否含有该整数。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>1.使用两层循环遍历，时间复杂度o(n^2)</p>\n<p>2.利用递增的特定，可以从左上角开始遍历，当前数值比所求的值小，向右，当前数值比所求的值大，向上，时间复杂度o(n)</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> var findNumber &#x3D; function(matrix,target)&#123;</span><br><span class=\"line\">    if(!matrix.length) return false;</span><br><span class=\"line\">    let x &#x3D; matrix.length - 1,y&#x3D;0;</span><br><span class=\"line\">    while(x&gt;&#x3D;0;y &lt; matrix[0].length)&#123;</span><br><span class=\"line\">        if(matrix[x][y] &#x3D;&#x3D;&#x3D; target)&#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;else if (matrix[x][y] &gt; target)&#123;</span><br><span class=\"line\">            x--</span><br><span class=\"line\">        &#125;else &#123;</span><br><span class=\"line\">            y++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h2 id=\"题目（中等）\"><a href=\"#题目（中等）\" class=\"headerlink\" title=\"题目（中等）\"></a>题目（中等）</h2><p>二维数组中的查找</p>\n<p>在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的<br>一个二维数组和一个整数，判断数组中是否含有该整数。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>1.使用两层循环遍历，时间复杂度o(n^2)</p>\n<p>2.利用递增的特定，可以从左上角开始遍历，当前数值比所求的值小，向右，当前数值比所求的值大，向上，时间复杂度o(n)</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> var findNumber &#x3D; function(matrix,target)&#123;</span><br><span class=\"line\">    if(!matrix.length) return false;</span><br><span class=\"line\">    let x &#x3D; matrix.length - 1,y&#x3D;0;</span><br><span class=\"line\">    while(x&gt;&#x3D;0;y &lt; matrix[0].length)&#123;</span><br><span class=\"line\">        if(matrix[x][y] &#x3D;&#x3D;&#x3D; target)&#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;else if (matrix[x][y] &gt; target)&#123;</span><br><span class=\"line\">            x--</span><br><span class=\"line\">        &#125;else &#123;</span><br><span class=\"line\">            y++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>"},{"title":"算法题2","date":"2021-04-21T12:04:53.000Z","_content":"## 题目 （简单）\n\n替换空格\n\n请实现一个函数，将一个字符串中的空格替换成“%20”。例如，当字符串为 We Are Happy.则经过替换之后的字符串为 We%20\nAre%20Happy\n\n## 思路\n\n1.将字符串转换为数组，统计其中的空格数量\n\n2.根据空格数量和原有长度计算出替换后的字符长度数组\n\n3.创建2个指针，一个指末尾，一个指字符串有效位末尾，实现原地修改\n\n数组遍历从后往前遍历，避免从前往后，造成字符串被修改\n\n## 代码\n\n```\nvar replaceSpace = function (s) {\n    s = s.split(\"\");\n    let oldLen = s.length;\n    let spaceCount = 0;\n    for(let i=0;i< oldLen; i++){\n        if(s[i]===' '){\n            spaceCount++;\n        }\n    }\n    s.length += spaceCount * 2;\n    for (let i = oldLen-1,j=s.length-1;i>=0;i--,j--){\n        if(s[i] !== ' ') s[j] = s[i];\n        else {\n            s[j-2]='%';\n            s[j-1]='2';\n            s[j]='0';\n            j-=2;\n        }\n    }\n    return s.join('')\n}\n```","source":"_posts/算法题2.md","raw":"---\ntitle: 算法题2\ndate: 2021-04-21 20:04:53\ntags: 算法\ncategories: 每日一题\n---\n## 题目 （简单）\n\n替换空格\n\n请实现一个函数，将一个字符串中的空格替换成“%20”。例如，当字符串为 We Are Happy.则经过替换之后的字符串为 We%20\nAre%20Happy\n\n## 思路\n\n1.将字符串转换为数组，统计其中的空格数量\n\n2.根据空格数量和原有长度计算出替换后的字符长度数组\n\n3.创建2个指针，一个指末尾，一个指字符串有效位末尾，实现原地修改\n\n数组遍历从后往前遍历，避免从前往后，造成字符串被修改\n\n## 代码\n\n```\nvar replaceSpace = function (s) {\n    s = s.split(\"\");\n    let oldLen = s.length;\n    let spaceCount = 0;\n    for(let i=0;i< oldLen; i++){\n        if(s[i]===' '){\n            spaceCount++;\n        }\n    }\n    s.length += spaceCount * 2;\n    for (let i = oldLen-1,j=s.length-1;i>=0;i--,j--){\n        if(s[i] !== ' ') s[j] = s[i];\n        else {\n            s[j-2]='%';\n            s[j-1]='2';\n            s[j]='0';\n            j-=2;\n        }\n    }\n    return s.join('')\n}\n```","slug":"算法题2","published":1,"updated":"2021-04-21T12:41:39.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknsw4vcv0008aycm3nmthnxs","content":"<h2 id=\"题目-（简单）\"><a href=\"#题目-（简单）\" class=\"headerlink\" title=\"题目 （简单）\"></a>题目 （简单）</h2><p>替换空格</p>\n<p>请实现一个函数，将一个字符串中的空格替换成“%20”。例如，当字符串为 We Are Happy.则经过替换之后的字符串为 We%20<br>Are%20Happy</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>1.将字符串转换为数组，统计其中的空格数量</p>\n<p>2.根据空格数量和原有长度计算出替换后的字符长度数组</p>\n<p>3.创建2个指针，一个指末尾，一个指字符串有效位末尾，实现原地修改</p>\n<p>数组遍历从后往前遍历，避免从前往后，造成字符串被修改</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var replaceSpace &#x3D; function (s) &#123;</span><br><span class=\"line\">    s &#x3D; s.split(&quot;&quot;);</span><br><span class=\"line\">    let oldLen &#x3D; s.length;</span><br><span class=\"line\">    let spaceCount &#x3D; 0;</span><br><span class=\"line\">    for(let i&#x3D;0;i&lt; oldLen; i++)&#123;</span><br><span class=\"line\">        if(s[i]&#x3D;&#x3D;&#x3D;&#39; &#39;)&#123;</span><br><span class=\"line\">            spaceCount++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    s.length +&#x3D; spaceCount * 2;</span><br><span class=\"line\">    for (let i &#x3D; oldLen-1,j&#x3D;s.length-1;i&gt;&#x3D;0;i--,j--)&#123;</span><br><span class=\"line\">        if(s[i] !&#x3D;&#x3D; &#39; &#39;) s[j] &#x3D; s[i];</span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\">            s[j-2]&#x3D;&#39;%&#39;;</span><br><span class=\"line\">            s[j-1]&#x3D;&#39;2&#39;;</span><br><span class=\"line\">            s[j]&#x3D;&#39;0&#39;;</span><br><span class=\"line\">            j-&#x3D;2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return s.join(&#39;&#39;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h2 id=\"题目-（简单）\"><a href=\"#题目-（简单）\" class=\"headerlink\" title=\"题目 （简单）\"></a>题目 （简单）</h2><p>替换空格</p>\n<p>请实现一个函数，将一个字符串中的空格替换成“%20”。例如，当字符串为 We Are Happy.则经过替换之后的字符串为 We%20<br>Are%20Happy</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>1.将字符串转换为数组，统计其中的空格数量</p>\n<p>2.根据空格数量和原有长度计算出替换后的字符长度数组</p>\n<p>3.创建2个指针，一个指末尾，一个指字符串有效位末尾，实现原地修改</p>\n<p>数组遍历从后往前遍历，避免从前往后，造成字符串被修改</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var replaceSpace &#x3D; function (s) &#123;</span><br><span class=\"line\">    s &#x3D; s.split(&quot;&quot;);</span><br><span class=\"line\">    let oldLen &#x3D; s.length;</span><br><span class=\"line\">    let spaceCount &#x3D; 0;</span><br><span class=\"line\">    for(let i&#x3D;0;i&lt; oldLen; i++)&#123;</span><br><span class=\"line\">        if(s[i]&#x3D;&#x3D;&#x3D;&#39; &#39;)&#123;</span><br><span class=\"line\">            spaceCount++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    s.length +&#x3D; spaceCount * 2;</span><br><span class=\"line\">    for (let i &#x3D; oldLen-1,j&#x3D;s.length-1;i&gt;&#x3D;0;i--,j--)&#123;</span><br><span class=\"line\">        if(s[i] !&#x3D;&#x3D; &#39; &#39;) s[j] &#x3D; s[i];</span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\">            s[j-2]&#x3D;&#39;%&#39;;</span><br><span class=\"line\">            s[j-1]&#x3D;&#39;2&#39;;</span><br><span class=\"line\">            s[j]&#x3D;&#39;0&#39;;</span><br><span class=\"line\">            j-&#x3D;2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return s.join(&#39;&#39;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"算法题3","date":"2021-04-22T12:27:46.000Z","_content":"## 题目 （简单）\n\n跳台阶\n\n一只青蛙一次可以跳上 1 级台阶，也可以跳上 2 级。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。\n\n## 思路\n\n跳台阶是动态规划问题，由于一次只能跳1级或者2级，因此跳上n级台阶一共有2种方案，一种是从n-2跳上，一种是从n-1跳上\n\n## 代码\n\n方法一\n```\nvar numWays = function (n) {\n    if(n<=1) return 1;\n    if(n===2) return 2;\n    return (numWays(n-1)+numWays(n-2))\n}\n```\n方法二\n```\nvar numWays = function (n) {\n    let p=0,c=1;\n    while (n--) [p,c] = [c,(p+c)]\n    return c\n}\n```\n方法三\n```\nvar numWays = function(n) { \n    let dp = [];\n    dp[0] = 1;\n    dp[1] = 1;\n    for (let i = 2; i <= n; i++) {\n      let c = dp[i - 1] + dp[i - 2];\n      dp[i] = c ;\n    }\n    return dp[n]\n}\n```","source":"_posts/算法题3.md","raw":"---\ntitle: 算法题3\ndate: 2021-04-22 20:27:46\ntags: 算法\ncategories: 每日一题\n---\n## 题目 （简单）\n\n跳台阶\n\n一只青蛙一次可以跳上 1 级台阶，也可以跳上 2 级。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。\n\n## 思路\n\n跳台阶是动态规划问题，由于一次只能跳1级或者2级，因此跳上n级台阶一共有2种方案，一种是从n-2跳上，一种是从n-1跳上\n\n## 代码\n\n方法一\n```\nvar numWays = function (n) {\n    if(n<=1) return 1;\n    if(n===2) return 2;\n    return (numWays(n-1)+numWays(n-2))\n}\n```\n方法二\n```\nvar numWays = function (n) {\n    let p=0,c=1;\n    while (n--) [p,c] = [c,(p+c)]\n    return c\n}\n```\n方法三\n```\nvar numWays = function(n) { \n    let dp = [];\n    dp[0] = 1;\n    dp[1] = 1;\n    for (let i = 2; i <= n; i++) {\n      let c = dp[i - 1] + dp[i - 2];\n      dp[i] = c ;\n    }\n    return dp[n]\n}\n```","slug":"算法题3","published":1,"updated":"2021-04-22T12:56:01.102Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cknsw4vcw000caycmb3t024u2","content":"<h2 id=\"题目-（简单）\"><a href=\"#题目-（简单）\" class=\"headerlink\" title=\"题目 （简单）\"></a>题目 （简单）</h2><p>跳台阶</p>\n<p>一只青蛙一次可以跳上 1 级台阶，也可以跳上 2 级。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>跳台阶是动态规划问题，由于一次只能跳1级或者2级，因此跳上n级台阶一共有2种方案，一种是从n-2跳上，一种是从n-1跳上</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>方法一</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var numWays &#x3D; function (n) &#123;</span><br><span class=\"line\">    if(n&lt;&#x3D;1) return 1;</span><br><span class=\"line\">    if(n&#x3D;&#x3D;&#x3D;2) return 2;</span><br><span class=\"line\">    return (numWays(n-1)+numWays(n-2))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>方法二</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var numWays &#x3D; function (n) &#123;</span><br><span class=\"line\">    let p&#x3D;0,c&#x3D;1;</span><br><span class=\"line\">    while (n--) [p,c] &#x3D; [c,(p+c)]</span><br><span class=\"line\">    return c</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>方法三</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var numWays &#x3D; function(n) &#123; </span><br><span class=\"line\">    let dp &#x3D; [];</span><br><span class=\"line\">    dp[0] &#x3D; 1;</span><br><span class=\"line\">    dp[1] &#x3D; 1;</span><br><span class=\"line\">    for (let i &#x3D; 2; i &lt;&#x3D; n; i++) &#123;</span><br><span class=\"line\">      let c &#x3D; dp[i - 1] + dp[i - 2];</span><br><span class=\"line\">      dp[i] &#x3D; c ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return dp[n]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h2 id=\"题目-（简单）\"><a href=\"#题目-（简单）\" class=\"headerlink\" title=\"题目 （简单）\"></a>题目 （简单）</h2><p>跳台阶</p>\n<p>一只青蛙一次可以跳上 1 级台阶，也可以跳上 2 级。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>跳台阶是动态规划问题，由于一次只能跳1级或者2级，因此跳上n级台阶一共有2种方案，一种是从n-2跳上，一种是从n-1跳上</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>方法一</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var numWays &#x3D; function (n) &#123;</span><br><span class=\"line\">    if(n&lt;&#x3D;1) return 1;</span><br><span class=\"line\">    if(n&#x3D;&#x3D;&#x3D;2) return 2;</span><br><span class=\"line\">    return (numWays(n-1)+numWays(n-2))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>方法二</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var numWays &#x3D; function (n) &#123;</span><br><span class=\"line\">    let p&#x3D;0,c&#x3D;1;</span><br><span class=\"line\">    while (n--) [p,c] &#x3D; [c,(p+c)]</span><br><span class=\"line\">    return c</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>方法三</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var numWays &#x3D; function(n) &#123; </span><br><span class=\"line\">    let dp &#x3D; [];</span><br><span class=\"line\">    dp[0] &#x3D; 1;</span><br><span class=\"line\">    dp[1] &#x3D; 1;</span><br><span class=\"line\">    for (let i &#x3D; 2; i &lt;&#x3D; n; i++) &#123;</span><br><span class=\"line\">      let c &#x3D; dp[i - 1] + dp[i - 2];</span><br><span class=\"line\">      dp[i] &#x3D; c ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return dp[n]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cknsw4vcl0001aycm498t0l18","category_id":"cknsw4vcr0004aycm11xeb3y0","_id":"cknsw4vcx000daycm4056hu94"},{"post_id":"cknsw4vcu0007aycm9z9j6hhg","category_id":"cknsw4vcw000aaycmht0dahl8","_id":"cknsw4vd0000jaycm8l939d84"},{"post_id":"cknsw4vcv0008aycm3nmthnxs","category_id":"cknsw4vcw000aaycmht0dahl8","_id":"cknsw4vd0000maycmfjazftaw"},{"post_id":"cknsw4vcw000caycmb3t024u2","category_id":"cknsw4vcw000aaycmht0dahl8","_id":"cknsw4vd1000paycm78ex0m4e"}],"PostTag":[{"post_id":"cknsw4vcl0001aycm498t0l18","tag_id":"cknsw4vcs0005aycm0fj69qnb","_id":"cknsw4vcw000baycmfgoz2hek"},{"post_id":"cknsw4vcp0003aycmhak19257","tag_id":"cknsw4vcv0009aycm1ar1g7fd","_id":"cknsw4vcy000gaycmdiwx2mgf"},{"post_id":"cknsw4vcs0006aycmep4f1dew","tag_id":"cknsw4vcx000eaycm40gcfmhb","_id":"cknsw4vd0000kaycm25quewey"},{"post_id":"cknsw4vcu0007aycm9z9j6hhg","tag_id":"cknsw4vcz000haycmd96u18tq","_id":"cknsw4vd1000naycm2kmi41gb"},{"post_id":"cknsw4vcv0008aycm3nmthnxs","tag_id":"cknsw4vcz000haycmd96u18tq","_id":"cknsw4vd2000qaycmc8qx3zay"},{"post_id":"cknsw4vcw000caycmb3t024u2","tag_id":"cknsw4vcz000haycmd96u18tq","_id":"cknsw4vd2000raycm4ghc1yzm"}],"Tag":[{"name":"Markdown","_id":"cknsw4vcs0005aycm0fj69qnb"},{"name":"webpack","_id":"cknsw4vcv0009aycm1ar1g7fd"},{"name":"机器学习","_id":"cknsw4vcx000eaycm40gcfmhb"},{"name":"算法","_id":"cknsw4vcz000haycmd96u18tq"}]}}